<style>
	.content{
		display:none;
	}
	h1, form, input, button{
		display: block;
	}
	.timer input{
		width: auto;
		text-align: center;
	}
</style>

<div class="container">
	<div class="row">
		<div class="welcome col-xs-3 center-block">
			<button class="start-btn text-center">
				I'm Ready!
			</button>
		</div>

		<div class="content col-xs-3">
			<h1>Question</h1>
			<div class="body">
				<p><%= @quiz.question.body %></p>
			</div>
			<form role="form">
				<div class="answer">
					<input type="hidden" name="question_id" value=""/>
					<input type="hidden" name="student_id" value=""/>
					<div class="form-group">
						<label for="answer">Your Answer</label>
						<input type="text" id="answer" name="answer" class="form-control"/>
					</div>
					<button type="submit" class="btn btn-default">Submit</button>
				</div>
			</form>
			<div class="timer">
				<span>Time left to answer</span>
				<input id="countdown_clock" value="00:10" placeholder="00:00:00"/>
			</div>
		</div>
	</div>
</div>
<script>
	(function($){
		var $welcome = $('.welcome'),
			$content = $('.content, .timer'),
			$form = $('form');
			answerPeriod = 11000; //TODO: to be filled in server-side
		
		bindEvents();

		function bindEvents(){
			$('.start-btn', $welcome).on('click', showQuestion);
			$form.on('submit', formSubmitHandler);
		}

		function startClock(){
			var $clock = $('#countdown_clock'),
				countdown = Tock({
	                countdown: true,
	                interval: 500,
	                callback: function () {
	                	var newTime = countdown.msToTime(countdown.lap());
	                	newTime = newTime.substring(0, newTime.length - 4);
	                    $clock.val(newTime);
	                },
	                complete: function () {
	                	$('#answer').prop('disabled', true);
	                    console.log('submit');
	                }
	            });
			countdown.start(answerPeriod);
		}

		function showQuestion(){
			//TODO: Check that the question hasnt expired before showing it?
			$welcome.fadeOut(function(){
				$content.fadeIn(function(){
					startClock();
				});
			});
		}

		function formSubmitHandler(e){
			var $form = $(this),
				errors,
				data;
			
			e.preventDefault();

			errors = validateForm($form);
			console.log(errors);

			if (errors.length != 0){
				//TODO: Show errors.
			} else {
				console.log('submitting data');
				data = $(this).serialize();
				//TODO: Submit answer
				$.ajax({
					url: "",
					type: "POST",
					data: data,
					success: formResponseHandler,
					error: formResponseHandler
				});
			}
			
		}

		function formResponseHandler(response){
			console.log(response);
		}

		function validateForm($form){
			var errors = [];
			$('input[type!=hidden]', $form).each(function($el){
				var input = $(this).val(),
					field = $(this).attr('name');

				if(input.length == 0){
					errors = {
						field: field,
						error: "The " + field + " field cannot be empty."
					};
				}
			});

			return errors;
		}
	})(jQuery);
</script>
